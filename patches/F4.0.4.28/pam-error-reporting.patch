diff -u tacacs-F4.0.4.28-orig/pwlib.c tacacs-F4.0.4.28/pwlib.c
--- tacacs-F4.0.4.28-orig/pwlib.c	2013-08-01 09:05:20.000000000 -0700
+++ tacacs-F4.0.4.28/pwlib.c	2018-05-21 13:42:00.668605000 -0700
@@ -50,7 +50,7 @@
 static int etc_passwd_file_verify(char *, char *, struct authen_data *);
 static int des_verify(char *, char *);
 #if HAVE_PAM
-static int pam_verify(char *, char *);
+static int pam_verify(char *, char *, struct authen_data *data);
 #endif
 static int passwd_file_verify(char *, char *, struct authen_data *, char *);

@@ -157,7 +157,7 @@
 #if HAVE_PAM
     if (strcmp(cfg_passwd, "PAM") == 0) {
 	/* try to verify the password via PAM */
-	if (!pam_verify(name, passwd)) {
+	if (!pam_verify(name, passwd, data)) {
 	    data->status = TAC_PLUS_AUTHEN_STATUS_FAIL;
 	    return(0);
 	} else
@@ -596,9 +596,10 @@
  * return 1 if verified, 0 otherwise.
  */
 static int
-pam_verify(char *user, char *passwd)
+pam_verify(char *user, char *passwd, struct authen_data *data)
 {
     int			err;
+    int     acct;
     int			pam_flag;
     struct pam_conv	conv = { pam_tacacs, passwd };
     pam_handle_t	*pamh = NULL;
@@ -625,15 +626,47 @@

     switch ((err = pam_authenticate(pamh, pam_flag))) {
     case PAM_SUCCESS:
-	pam_end(pamh, err);
-	if (debug & DEBUG_PASSWD_FLAG)
-	    report(LOG_DEBUG, "pam_verify returns 1");
-	return(1);
-	break;
+      switch((acct = pam_acct_mgmt(pamh, pam_flag))) {
+				case PAM_SUCCESS:
+				  if (debug & DEBUG_PASSWD_FLAG)
+					  report(LOG_DEBUG, "pam_acct_mgmt returns PAM_SUCCESS");
+					pam_end(pamh, err);
+					if (debug & DEBUG_PASSWD_FLAG)
+						report (LOG_DEBUG, "pam_verify returns 1");
+						return(1);
+						break;
+				case PAM_NEW_AUTHTOK_REQD:
+					if (debug & DEBUG_PASSWD_FLAG)
+						report(LOG_DEBUG, "pam_acct_mgmt returns PAM_NEW_AUTHTOK_REQD");
+					if (data->server_msg)
+					  free(data->server_msg);
+					data->server_msg = tac_strdup("Password will expire soon, please change it immediately");
+					break;
+				case PAM_AUTHTOK_EXPIRED:
+				  if (debug & DEBUG_PASSWD_FLAG)
+					  report(LOG_DEBUG, "pam_acct_mgmt returns PAM_AUTHTOK_EXPIRED");
+					if (data->server_msg)
+					  free(data->server_msg);
+					data->server_msg = tac_strdup("Password has expired");
+					break;
+				case PAM_ACCT_EXPIRED:
+				  if (debug & DEBUG_PASSWD_FLAG)
+					  report(LOG_DEBUG, "pam_acct_mgmt returns PAM_ACCT_EXPIRED");
+					if (data->server_msg)
+					  free(data->server_msg);
+					data->server_msg = tac_strdup("Account has expired");
+					break;
+				default:
+				  if (debug & DEBUG_PASSWD_FLAG)
+					  report(LOG_DEBUG, "pam_account_mgmt returned unknown value %d",
+						       acct);
+						break;
+			}
+			break;
     case PAM_USER_UNKNOWN:
-	if (debug & DEBUG_PASSWD_FLAG)
-	    report(LOG_DEBUG, "Unknown user");
-	break;
+	    if (debug & DEBUG_PASSWD_FLAG)
+	      report(LOG_DEBUG, "Unknown user");
+	    break;
     case PAM_AUTH_ERR:
 	if (debug & DEBUG_PASSWD_FLAG)
 	    report(LOG_DEBUG, "Password is incorrect");
